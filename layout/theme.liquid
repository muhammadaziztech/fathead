<!doctype html>
<html class="no-js supports-no-cookies" lang="{{ request.locale.iso_code }}">
  <head>
    <script src="//searchanise-ef84.kxcdn.com/widgets/shopify/init.js?a=6w3H7X3p8Z"></script>
    
    {% unless page.title == 'Search Results'  %}
      {% render 'spdn' %}
    {% endunless %}
    <!-- Boost 6.2.2 -->
    {% render 'head-tag' %}
<!-- Google Tag Manager -->
    <script>
      (function (w, d, s, l, i) {
        w[l] = w[l] || [];
        w[l].push({ 'gtm.start': new Date().getTime(), event: 'gtm.js' });
        var f = d.getElementsByTagName(s)[0],
          j = d.createElement(s),
          dl = l != 'dataLayer' ? '&l=' + l : '';
        j.async = true;
        j.src = 'https://www.googletagmanager.com/gtm.js?id=' + i + dl;
        f.parentNode.insertBefore(j, f);
      })(window, document, 'script', 'dataLayer', 'GTM-54DV3V3');
    </script>
    <!-- End Google Tag Manager -->

    <meta name="google-site-verification" content="7vNRehk3iifvRyNq7MJCPzJkvyAyUNlzgDsAlZaldJg">

    <!-- Google tag (gtag.js) -->
    <script async src="https://www.googletagmanager.com/gtag/js?id=G-JT2KYDTYR3"></script>
    <script>
      window.dataLayer = window.dataLayer || [];
      function gtag() {
        dataLayer.push(arguments);
      }
      gtag('js', new Date());

      gtag('config', 'G-JT2KYDTYR3');
    </script>

    <script>
      !(function (w, d, t) {
        w.TiktokAnalyticsObject = t;
        var ttq = (w[t] = w[t] || []);
        (ttq.methods = [
          'page',
          'track',
          'identify',
          'instances',
          'debug',
          'on',
          'off',
          'once',
          'ready',
          'alias',
          'group',
          'enableCookie',
          'disableCookie',
        ]),
          (ttq.setAndDefer = function (t, e) {
            t[e] = function () {
              t.push([e].concat(Array.prototype.slice.call(arguments, 0)));
            };
          });
        for (var i = 0; i < ttq.methods.length; i++) ttq.setAndDefer(ttq, ttq.methods[i]);
        (ttq.instance = function (t) {
          for (var e = ttq._i[t] || [], n = 0; n < ttq.methods.length; n++) ttq.setAndDefer(e, ttq.methods[n]);
          return e;
        }),
          (ttq.load = function (e, n) {
            var i = 'https://analytics.tiktok.com/i18n/pixel/events.js';
            (ttq._i = ttq._i || {}),
              (ttq._i[e] = []),
              (ttq._i[e]._u = i),
              (ttq._t = ttq._t || {}),
              (ttq._t[e] = +new Date()),
              (ttq._o = ttq._o || {}),
              (ttq._o[e] = n || {});
            var o = document.createElement('script');
            (o.type = 'text/javascript'), (o.async = !0), (o.src = i + '?sdkid=' + e + '&lib=' + t);
            var a = document.getElementsByTagName('script')[0];
            a.parentNode.insertBefore(o, a);
          });

        ttq.load('CGRHRERC77U6U2VB0MFG');
        ttq.page();
      })(window, document, 'ttq');
    </script>

    <script>
      !(function (w, d, t) {
        w.TiktokAnalyticsObject = t;
        var ttq = (w[t] = w[t] || []);
        (ttq.methods = [
          'page',
          'track',
          'identify',
          'instances',
          'debug',
          'on',
          'off',
          'once',
          'ready',
          'alias',
          'group',
          'enableCookie',
          'disableCookie',
        ]),
          (ttq.setAndDefer = function (t, e) {
            t[e] = function () {
              t.push([e].concat(Array.prototype.slice.call(arguments, 0)));
            };
          });
        for (var i = 0; i < ttq.methods.length; i++) ttq.setAndDefer(ttq, ttq.methods[i]);
        (ttq.instance = function (t) {
          for (var e = ttq._i[t] || [], n = 0; n < ttq.methods.length; n++) ttq.setAndDefer(e, ttq.methods[n]);
          return e;
        }),
          (ttq.load = function (e, n) {
            var i = 'https://analytics.tiktok.com/i18n/pixel/events.js';
            (ttq._i = ttq._i || {}),
              (ttq._i[e] = []),
              (ttq._i[e]._u = i),
              (ttq._t = ttq._t || {}),
              (ttq._t[e] = +new Date()),
              (ttq._o = ttq._o || {}),
              (ttq._o[e] = n || {});
            var o = document.createElement('script');
            (o.type = 'text/javascript'), (o.async = !0), (o.src = i + '?sdkid=' + e + '&lib=' + t);
            var a = document.getElementsByTagName('script')[0];
            a.parentNode.insertBefore(o, a);
          });

        ttq.load('CGRHRERC77U6U2VB0MFG');
        ttq.page();
      })(window, document, 'ttq');
    </script>

    
    {% capture seo_title %}
    {{ page_title }}
    {% if current_tags %}
      {%- assign meta_tags = current_tags | join: ', ' %} &ndash; {{ 'general.meta.tags' | t: tags: meta_tags -}}
    {% endif %}
    {% if current_page != 1 %}
      &ndash; {{ 'general.meta.page' | t: page: current_page }}
    {% endif %}
    {% unless page_title contains shop.name %}
      &ndash; {{ shop.name }}
    {% endunless %}
  {% endcapture %}
    <title>{{ seo_title }}</title>
    <!-- 69285 -->
    {% render 'social-meta-tags' %}
    {%- assign menu_settings = shop.metafields.globo_menu_69441.settings.value -%}
    <script type="template/html" id="globoMenu69441HTML">
      <ul class="{{ shop.metafields.globo_menu_69441.class }}" data-menu-id="69441">{% for menuItem in shop.metafields.globo_menu_69441.items.value %}{% render "globo.menu.item", settings: menu_settings, menuItem: menuItem %}{% endfor %}</ul>
    </script>
    {%- liquid
      assign base_font = settings.type_base_font
      assign base_font_bold = base_font | font_modify: 'weight', 'bolder'
      assign base_font_italic = base_font | font_modify: 'style', 'italic'
      assign base_font_bold_italic = base_font_bold | font_modify: 'style', 'italic'
      assign logo_font = settings.type_logo_font
      assign heading_font = settings.type_heading_font
      assign nav_font = settings.type_nav_font
    -%}

    <style>
      {{ logo_font | font_face: font_display: 'fallback' }}
      {{ heading_font | font_face: font_display: 'fallback' }}
      {{ base_font | font_face: font_display: 'fallback' }}
      {{ base_font_bold | font_face: font_display: 'fallback' }}
      {{ base_font_italic | font_face: font_display: 'fallback' }}
      {{ base_font_bold_italic | font_face: font_display: 'fallback' }}
      {{ nav_font | font_face: font_display: 'fallback' }}
    </style>

    {{ 'themestyles.css' | asset_url | stylesheet_tag: preload: true }}
    {{ 'custom.css' | asset_url | stylesheet_tag: preload: true }}
    {{ 'ez-ecom-styles.css' | asset_url | stylesheet_tag: preload:true }}


    {%- if settings.swatch_enabled_productpage and settings.swatch_value_list != blank -%}
      <link
        rel="stylesheet"
        href="{{ 'swatches.css' | asset_url }}"
        media="print"
        onload="this.media='all'">
      <noscript><link rel="stylesheet" href="{{ 'swatches.css' | asset_url }}"></noscript>
    {%- endif -%}
    <script>
          document.documentElement.className = document.documentElement.className.replace('no-js', 'js');
          window.theme = window.theme || {};
          window.slate = window.slate || {};
          theme.moneyFormatWithCodeForProductsPreference = {% if settings.product_currency_code_enabled %}{{ shop.money_with_currency_format | json }}{% else %}{{ shop.money_format | json }}{% endif %};
          theme.moneyFormatWithCodeForCartPreference = {% if settings.cart_currency_code_enabled %}{{ shop.money_with_currency_format | json }}{% else %}{{ shop.money_format | json }}{% endif %};
          theme.moneyFormat = {{ shop.money_format | json }};
          theme.strings = {
      addToCart: {{ 'products.product.add_to_cart' | t | json }},
      unavailable: {{ 'products.product.unavailable' | t | json }},
      addressError: {{ 'map.errors.address_error' | t | json }},
      addressNoResults: {{ 'map.errors.address_no_results' | t | json }},
      addressQueryLimit: {{ 'map.errors.address_query_limit_html' | t | json }},
      authError: {{ 'map.errors.auth_error' | t | json }},
      addingToCart: {{ 'products.product.adding_to_cart' | t | json }},
      addedToCart: {{ 'products.product.added' | t | json }},
      productPreorder: {{ 'products.product.preorder' | t | json }},
      addedToCartPopupTitle: {{ 'layout.cart.added_title' | t | json }},
      addedToCartPopupItems: {{ 'layout.cart.items' | t | json }},
      addedToCartPopupSubtotal: {{ 'layout.cart.subtotal' | t | json }},
      addedToCartPopupGoToCart: {{ 'layout.cart.go_to_cart' | t | json }},
      cartTermsNotChecked: {{ 'cart.terms.confirmation' | t | json }},
      searchLoading: {{ 'layout.header.search_loading' | t | json }},
      searchMoreResults: {{ 'layout.header.search_more_results' | t | json }},
      searchNoResults: {{ 'layout.header.search_no_results' | t | json }},
      priceFrom: {{ 'products.product.from_text' | t | json }},
      quantityTooHigh: {{ 'cart.general.quantity_too_high' | t: quantity: '[[ quantity ]]' | json }},
      onSale: {{ 'products.product.on_sale' | t | json }},
      soldOut: {{ 'products.product.sold_out' | t | json }},
      in_stock: {{ 'products.labels.in_stock' | t | json }},
      low_stock: {{ 'products.labels.low_stock' | t | json }},
      only_x_left: {{ 'products.labels.only_x_left' | t: quantity: '[[ quantity ]]' | json }},
      single_unit_available: {{ 'products.labels.single_unit_available' | t | json }},
      x_units_available: {{ 'products.labels.x_units_available' | t: quantity: '[[ quantity ]]' | json }},
      unitPriceSeparator: {{ 'products.product.unit_price_separator' | t | json }},
      close: {{ 'general.accessibility_labels.close' | t | json }},
      cart_shipping_calculator_hide_calculator: {{ 'cart.shipping_calculator.hide_calculator' | t | json }},
      cart_shipping_calculator_title: {{ 'cart.shipping_calculator.title' | t | json }},
      cart_general_hide_note: {{ 'cart.general.hide_note' | t | json }},
      cart_general_show_note: {{ 'cart.general.show_note' | t | json }},
      previous: {{'general.accessibility_labels.previous' | t | json }},
      next: {{'general.accessibility_labels.next' | t | json }}
          };
          theme.routes = {
      account_login_url: '{{ routes.account_login_url }}',
      account_register_url: '{{ routes.account_register_url }}',
      account_addresses_url: '{{ routes.account_addresses_url }}',
      search_url: '{{ routes.search_url }}',
      cart_url: '{{ routes.cart_url }}',
      cart_add_url: '{{ routes.cart_add_url }}',
      cart_change_url: '{{ routes.cart_change_url }}',
      product_recommendations_url: '{{ routes.product_recommendations_url }}'
          };
          theme.settings = {
      dynamicQtyOpts: {{ settings.hide_unavailable_quantity_opts | json }},
      saleLabelEnabled: {{ settings.sale_label_enabled | json }},
      soldLabelEnabled: {{ settings.sold_label_enabled | json }},
      onAddToCart: {{ settings.on_add_to_cart | json }}
          };
    </script>


    {%- if template.directory == 'customers' -%}
      <script src="{{ 'shopify_common.js' | shopify_asset_url }}" defer="defer"></script>
    {%- endif -%}


    {{ content_for_header }}

    {%- if request.design_mode -%}
      <script
        src="{{ 'store-info.v1.0.0.js' | asset_url }}"
        defer="defer"
        data-theme="Boost"
        data-version="6.2.2"
        data-contact="{{ shop.email | escape }}"></script>
    {%- endif -%}

    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <link
      rel="stylesheet"
      type="text/css"
      href="https://cdn.jsdelivr.net/npm/slick-carousel@1.8.1/slick/slick.css" />
    <link
      rel="stylesheet"
      type="text/css"
      href="https://cdn.jsdelivr.net/npm/slick-carousel@1.8.1/slick/slick-theme.css" />
    <script type="text/javascript" src="https://cdn.jsdelivr.net/npm/slick-carousel@1.8.1/slick/slick.min.js"></script>

    <script>
       document.addEventListener('DOMContentLoaded', function () {
        var customizerData = document.getElementById('CustomizerProductJson');
        if (customizerData) {
          var productData = JSON.parse(customizerData.textContent);
          console.log('Loaded product for customization:', productData);
        }
      });
    </script>
<script type="text/javascript">
    (function(c,l,a,r,i,t,y){
        c[a]=c[a]||function(){(c[a].q=c[a].q||[]).push(arguments)};
        t=l.createElement(r);t.async=1;t.src="https://www.clarity.ms/tag/"+i;
        y=l.getElementsByTagName(r)[0];y.parentNode.insertBefore(t,y);
    })(window, document, "clarity", "script", "n4t4nqeyhq");
</script>
  </head>

  <body id="{{ page_title | handle }}" class="{{ template.name }} template-{{ template | split: '.' | first }}
    {%- if template.suffix %} template-suffix-{{ template.suffix }}{% endif -%}
    {%- if settings.swatch_enabled_productpage %} swatch-method-{{ settings.swatch_method }}{% endif -%}
    {% if settings.animations_enabled != "disabled" %} cc-animate-enabled{% endif %}{% unless template.name == "collection" %} {% endunless %}">
    <!-- Google Tag Manager (noscript) -->
    <noscript
      ><iframe
        src="https://www.googletagmanager.com/ns.html?id=GTM-54DV3V3"
        height="0"
        width="0"
        style="display:none;visibility:hidden"
      ></iframe
    ></noscript>
    <!-- End Google Tag Manager (noscript) -->
    <a class="in-page-link visually-hidden skip-link" href="#MainContent">{{ 'general.accessibility.skip_to_content' | t }}</a>

    <div class="header-group">
      {% sections 'header-group' %}

      <a
        href="#"
        class="focus-tint"
        aria-hidden="true"
        aria-label="{{ 'general.accessibility_labels.close' | t }}"></a>
    </div>

    {% unless template.name == 'index' or template.directory == 'customers' %}
      <div class="container breadcrumbs-container">
        <div class="page-width">
          {%- render 'breadcrumbs'
            , show_next_prev: true -%}
        </div>
      </div>
    {% endunless %}
    {% comment %}
    <!-- Old customizer -->
    {%- if product.tags contains 'customizable' and template contains 'product' -%}
      <script type="application/json" id="CustomizerProductJson">
            {{ product | json }}
      </script>
      {%- render 'fathead-customizer' -%}
      <style>
        #fathead-customizer {
          height: calc(100% - 40px);
          top: 40px;
        }
        .customizer-navigation-bar .breadcrumbs {
          display: unset;
        }
        #fathead-customizer:empty {
          display: none;
        }
        .container.product-detail .row {
          display: unset !important;
        }
        .step-header .title {
          font-size: inherit !important;
        }
        .step .step-header .icon-check {
          position: absolute;
          right: 20px;
          top: 20px;
          width: 14px;
        }
      </style>
    {%- endif -%}
    {% endcomment %}
    <main id="MainContent">
      {%- assign accent_alpha = settings.accent_color | color_extract: 'alpha' -%}
      {%- if template contains 'index' -%}
        {%- if settings.color_body_background != settings.accent_color and accent_alpha > 0 -%}
          <span class="accent-background"></span>
        {%- endif -%}
        {% section 'banner' %}
      {%- endif -%}
      {{ content_for_layout }}
      {% if template.name == "collection" or template.name == "page" %}
        {% render 'search-overrides' %}
      {% endif %}
    </main>
    <script>
      const retouchAddonVariantId = 33653412495448;

      const handleCustomizer = async (evt) => {
        const item = evt.detail;
        const hasRetouch = !!item.properties.Retouch;
        let properties = JSON.parse(JSON.stringify(item.properties));
        const includeAStick = document.querySelector('#include-a-stick[type="checkbox"]');
        if (includeAStick && includeAStick.checked) {
          properties = { ...properties, 'Include A Wooden Handle (Free - U.S. Residents Only)': 'Yes' };
          item.properties = { ...item.properties, 'Include A Wooden Handle (Free - U.S. Residents Only)': 'Yes' };
        }
        if (item.properties.Retouch) {
          delete item.properties;
        }
        const cartNotification = document.querySelector('cart-notification') || document.querySelector('cart-drawer');
        const quickAddModal = document.getElementById('CustomizerProductJson').closest('quick-add-modal');

        item.sections_url = window.location.pathname;

        const cartItemStr = await $.ajax({ url: '/cart/add.js', type: 'POST', dataType: 'json', data: item });
        const cartItem = cartItemStr;

        if (quickAddModal) {
          document.body.addEventListener(
            'modalClosed',
            () => {
              setTimeout(() => {
                if (cartNotification.classList.contains('is-empty')) cartNotification.classList.remove('is-empty');
                cartNotification.renderContents(cartItem);
              });
            },
            { once: true }
          );
          quickAddModal.hide(true);
        } else {
          if (cartNotification.classList.contains('is-empty')) cartNotification.classList.remove('is-empty');
          cartNotification.renderContents(cartItem);
        }
        if (properties.Retouch) {
          const _customOptions = JSON.parse(JSON.stringify(properties._customOptions));
          const retouchOptionIndex = _customOptions.findIndex((e) => e.Code === 'RETOUCH');
          if (retouchOptionIndex > -1) {
            _customOptions[retouchOptionIndex].DisplayName = 'Retouch-' + cartItem.key;
          }
          properties = { ...properties, _customOptions, _idItem: cartItem.key };
          const response = await $.ajax({
            url: '/cart/change.js',
            type: 'POST',
            dataType: 'json',
            data: { id: cartItem.key, quantity: cartItem.quantity, properties },
          });
          const addonItem = await $.ajax({
            url: '/cart/add.js',
            type: 'POST',
            dataType: 'json',
            data: {
              id: retouchAddonVariantId,
              quantity: 1,
              properties: {
                _idItem: cartItem.key,
                _Width: 0,
                _Height: 0,
                _Flip: 'Portrait',
                _CustomProductType: 'Retouch',
                _Size: '',
                _customOptions: [
                  {
                    Code: 'RETOUCH',
                    DisplayName: 'Retouch-' + cartItem.key,
                    Notes: cartItem.product_title,
                  },
                ],
                Product: cartItem.product_title,
              },
            },
          });
        }
      };
      document.addEventListener('customizer.ajaxCart', handleCustomizer);
    </script>


    {%- sections 'overlay-group' -%}

    <div class="footer-group footer-group--shift-up">
      {% sections 'footer-group' %}
    </div>

    {% section 'footer' %}

    {%- if template contains 'product' -%}
      {% render 'photoswipe' %}
    {%- endif -%}

    <script src="{{ 'vendor.min.js' | asset_url }}" defer="defer"></script>
    <script src="{{ 'theme.js' | asset_url }}" defer="defer"></script>
    <script src="{{ 'customjs.js' | asset_url }}" defer="defer">
  </script>
    <!-- Rebuy START -->
    {% render 'rebuy-extensions' %}
  <!-- Rebuy END -->
    {% render 'spdn2' %}
  </body>
</html>